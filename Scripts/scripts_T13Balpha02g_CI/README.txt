Scripts to produce a parameter scan in minimal models generated by the code "Lagrangian.py" (by Simon May)
The scripts are not optimised for the model "T1-3-B_0"

The scripts shall be run in the following order and below is a brief explanation of their actions.
(more info can be found in the comments of each file)


1) Generate_model.py

This script sets up all the necessary files and compile the necessary code for a micrOMEGA correct execution.
First it runs the SARAH code calling the "run_SARAH.m" script.

run_SARAH.m -> the script runs a Mathematica code which loads the SARAH module and the model files that are to be generated with the code "Lagrangian.py" (by Simon May).
The folder with the model should be positioned in the SARAH folder under "/Models/".
The name of the model is referred in the main script to be the variable "model_name_long".
The SARAH code produces a source code for SPheno and the model files that will be used by micrOMEGA.

The source code for SPheno, output of SARAH, is copied into the SPheno main folder and it is compiled.
The micrOMEGA "newProject" script is run and the model files are copied in the appropriate folder for micrOMEGA run.
The source code "micrOMEGA_T13Balpha0_run.c" is copied in the micrOMEGA folder and compiled

micrOMEGA_T13Balpha0_run.c -> an executable is produced after the compilation.
It will be called in a loop to print out the result of micrOMEGA (Relic Density, Direct Detection cross section and many other parameters).
The results are printed in the "micrOMEGA_output.out".
The code can be edited in order to extract more parameters from the scan.
(no extra Direct Detection or Lepton Flavour Violation observables are stored for the moment).



2) micrOMEGA_scan.py

This script runs the micrOMEGA executable in a loop in order to perform a N-dimensional scan of parameters.

The variables and the parameters over which to scan can be setted here.
The script prepares the necessary input files for SPheno, changing the value of the parameter of the scan and changing flags 50 and 77 in order to produce usable spectra for micrOMEGA.
For each input file the SPheno code produces a spectrum file.
The input files are stored into the SPheno folder "[model_name]/Input_Files/", while the spectra are stored into the SPheno folder "[model_name]/Output_Files/"
Other unnecessary files are removed.

The micrOMEGA executable is run for each spectrum file.
The spectrum files are copied into the micrOMEGA folder and gets renamed as "SPheno.spc.[model_name]", which is the standard input for the micrOMEGA executable.
The outputs are appended in the micrOMEGA output file which is then moved into the local script folder.





THINGS TO CHANGE FOR NEW MODEL IMPLEMENTATION:

1) Generate_model.py
-> "model_name_long" is to be setted as the model name input for SARAH. It will be the name of the folder of the new model, which is the output of the code "Lagrangian.py" (by Simon May).
-> "model_name" it resembles the "model_name_long" where any unconventional character is transformed into a regular character.
-> all the versions of the used tools (SARAH, SPheno, micrOMEGA, Mathematica).
-> all the main Directories paths containing the tools and the Mathematica prebuild script.

2) run_SARAH.m
-> "model" must match "model_name_long", that is the folder of the new model.
-> The directory where is located the main SARAH module "SARAH.m".

3) micrOMEGA_T13Balpha0_run.c
-> The name of this file should be changed accordingly to the new "name_model" into "micrOMEGA_[model_name]_run.c".
-> The output variables are to be adapted accordingly to the model and to the desired information to store.

4) micrOMEGA_scan.py
-> "model_name" must match the previous.
-> all the versions of the used tools (SPheno, micrOMEGA).
-> all the main (and son) Directories paths containing the tools.
-> the parameters of the scan shall be setted accordingly to the desired scan.
